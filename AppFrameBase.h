//////////////////////////////////////////////////////////////////////
// This file was auto-generated by codelite's wxCrafter Plugin
// wxCrafter project file: AppFrameBase.wxcp
// Do not modify this file by hand!
//////////////////////////////////////////////////////////////////////

#ifndef _DESKTOP_MIFISTATS_APPFRAMEBASE_BASE_CLASSES_H
#define _DESKTOP_MIFISTATS_APPFRAMEBASE_BASE_CLASSES_H

#include <wx/settings.h>
#include <wx/xrc/xmlres.h>
#include <wx/xrc/xh_bmp.h>
#include <wx/dialog.h>
#include <wx/iconbndl.h>
#include <wx/artprov.h>
#include <wx/sizer.h>
#include <wx/textctrl.h>
#include <wx/timer.h>
#if wxVERSION_NUMBER >= 2900
#include <wx/persist.h>
#include <wx/persist/toplevel.h>
#include <wx/persist/bookctrl.h>
#include <wx/persist/treebook.h>
#endif

#ifdef WXC_FROM_DIP
#undef WXC_FROM_DIP
#endif
#if wxVERSION_NUMBER >= 3100
#define WXC_FROM_DIP(x) wxWindow::FromDIP(x, NULL)
#else
#define WXC_FROM_DIP(x) x
#endif


class AppFrameBase : public wxDialog
{
protected:
    wxBoxSizer* main_sizer;
    wxBoxSizer* boxSizer110;
    wxGridSizer* gridSizer100;
    wxTextCtrl* CCT;
    wxTextCtrl* CurrentConnectTime;
    wxTextCtrl* CU;
    wxTextCtrl* CurrentUpload;
    wxTextCtrl* CD;
    wxTextCtrl* CurrentDownload;
    wxTextCtrl* TU;
    wxTextCtrl* TotalUpload;
    wxTextCtrl* TD;
    wxTextCtrl* TotalDownload;
    wxTextCtrl* TUD;
    wxTextCtrl* TotalUploadDownload;
    wxTextCtrl* TCT;
    wxTextCtrl* TotalConnectTime;
    wxTimer* m_pBackgroundTimer;

protected:
    virtual void OnClose(wxCloseEvent& event) { event.Skip(); }
    virtual void OnBackgroundTimer(wxTimerEvent& event) { event.Skip(); }

public:
    wxTextCtrl* GetCCT() { return CCT; }
    wxTextCtrl* GetCurrentConnectTime() { return CurrentConnectTime; }
    wxTextCtrl* GetCU() { return CU; }
    wxTextCtrl* GetCurrentUpload() { return CurrentUpload; }
    wxTextCtrl* GetCD() { return CD; }
    wxTextCtrl* GetCurrentDownload() { return CurrentDownload; }
    wxTextCtrl* GetTU() { return TU; }
    wxTextCtrl* GetTotalUpload() { return TotalUpload; }
    wxTextCtrl* GetTD() { return TD; }
    wxTextCtrl* GetTotalDownload() { return TotalDownload; }
    wxTextCtrl* GetTUD() { return TUD; }
    wxTextCtrl* GetTotalUploadDownload() { return TotalUploadDownload; }
    wxTextCtrl* GetTCT() { return TCT; }
    wxTextCtrl* GetTotalConnectTime() { return TotalConnectTime; }
    wxTimer* GetPBackgroundTimer() { return m_pBackgroundTimer; }
    AppFrameBase(wxWindow* parent, wxWindowID id = wxID_ANY, const wxString& title = _("HuaStats - Lazy Stats for Huawei Routers"), const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize(-1,-1), long style = wxDEFAULT_DIALOG_STYLE|wxSTAY_ON_TOP|wxRESIZE_BORDER|wxMINIMIZE_BOX);
    virtual ~AppFrameBase();
};

#endif
